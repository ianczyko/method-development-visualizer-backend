cmake_minimum_required(VERSION 3.9)
project(method-development-visualizer-backend)

# Automatically detect source files
file(GLOB_RECURSE main_SOURCES "src/*.cpp")
file(GLOB_RECURSE main_HEADERS "src/*.h")
set (main_INCLUDE_DIRS "")
foreach (_headerFile ${main_HEADERS})
    get_filename_component(_dir ${_headerFile} PATH)
    list (APPEND main_INCLUDE_DIRS ${_dir})
endforeach()
list(REMOVE_DUPLICATES main_INCLUDE_DIRS)


option(ENABLE_COVERAGE "Enable coverage reporting" FALSE)

#if(TEST)
#    add_compile_options(-g)
#endif()
if(ENABLE_COVERAGE)
    add_compile_options(--coverage)
endif()
add_compile_options(-Wall -std=c++14 -g)
add_executable (method-development-visualizer-backend main.cpp ${main_SOURCES})

target_include_directories(method-development-visualizer-backend PRIVATE ${main_INCLUDE_DIRS})
option(TEST "Enable catch2 testing " FALSE)
if(TEST)
    add_executable (tester tests/test.cpp ${main_SOURCES})
    if(ENABLE_COVERAGE)
        target_link_libraries(method-development-visualizer-backend --coverage)
        target_link_libraries(tester --coverage)
    endif()
endif()
# add_test(MainTest tester)
